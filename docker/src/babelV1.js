import { spawnSync } from 'child_process';

//const BABEL = '/opt/local/bin/obabel';
const BABEL = '/usr/bin/obabel';

export default function babelV1(fastify) {
  fastify.post(
    '/v1/convert',
    {
      schema: {
        consumes: ['multipart/form-data'],
        body: {
          type: 'object',
          properties: {
            input: {
              format: 'binary',
            },
            inputFormat: {
              type: 'string',
              enum: [
                'abinit -- ABINIT Output Format',
                'acesout -- ACES output format',
                'acr -- ACR format',
                'adfband -- ADF Band output format',
                'adfdftb -- ADF DFTB output format',
                'adfout -- ADF output format',
                'alc -- Alchemy format',
                'aoforce -- Turbomole AOFORCE output format',
                'arc -- Accelrys/MSI Biosym/Insight II CAR format',
                'axsf -- XCrySDen Structure Format',
                'bgf -- MSI BGF format',
                'box -- Dock 3.5 Box format',
                'bs -- Ball and Stick format',
                'c09out -- Crystal 09 output format',
                'c3d1 -- Chem3D Cartesian 1 format',
                'c3d2 -- Chem3D Cartesian 2 format',
                'caccrt -- Cacao Cartesian format',
                'can -- Canonical SMILES format',
                'car -- Accelrys/MSI Biosym/Insight II CAR format',
                'castep -- CASTEP format',
                'ccc -- CCC format',
                'cdjson -- ChemDoodle JSON',
                'cdx -- ChemDraw binary format',
                'cdxml -- ChemDraw CDXML format',
                'cif -- Crystallographic Information File',
                'ck -- ChemKin format',
                'cml -- Chemical Markup Language',
                'cmlr -- CML Reaction format',
                'cof -- Culgi object file format',
                'CONFIG -- DL-POLY CONFIG',
                'CONTCAR -- VASP format',
                'CONTFF -- MDFF format',
                'crk2d -- Chemical Resource Kit diagram(2D)',
                'crk3d -- Chemical Resource Kit 3D format',
                'ct -- ChemDraw Connection Table format',
                'cub -- Gaussian cube format',
                'cube -- Gaussian cube format',
                'dallog -- DALTON output format',
                'dalmol -- DALTON input format',
                'dat -- Generic Output file format',
                'dmol -- DMol3 coordinates format',
                'dx -- OpenDX cube format for APBS',
                'ent -- Protein Data Bank format',
                'exyz -- Extended XYZ cartesian coordinates format',
                'fa -- FASTA format',
                'fasta -- FASTA format',
                'fch -- Gaussian formatted checkpoint file format',
                'fchk -- Gaussian formatted checkpoint file format',
                'fck -- Gaussian formatted checkpoint file format',
                'feat -- Feature format',
                'fhiaims -- FHIaims XYZ format',
                'fract -- Free Form Fractional format',
                'fs -- Fastsearch format',
                'fsa -- FASTA format',
                'g03 -- Gaussian Output',
                'g09 -- Gaussian Output',
                'g16 -- Gaussian Output',
                'g92 -- Gaussian Output',
                'g94 -- Gaussian Output',
                'g98 -- Gaussian Output',
                'gal -- Gaussian Output',
                'gam -- GAMESS Output',
                'gamess -- GAMESS Output',
                'gamin -- GAMESS Input',
                'gamout -- GAMESS Output',
                'got -- GULP format',
                'gpr -- Ghemical format',
                'gro -- GRO format',
                'gukin -- GAMESS-UK Input',
                'gukout -- GAMESS-UK Output',
                'gzmat -- Gaussian Z-Matrix Input',
                'hin -- HyperChem HIN format',
                'HISTORY -- DL-POLY HISTORY',
                'inchi -- InChI format',
                'inp -- GAMESS Input',
                'ins -- ShelX format',
                'jin -- Jaguar input format',
                'jout -- Jaguar output format',
                'log -- Generic Output file format',
                'lpmd -- LPMD format',
                'mae -- Maestro format',
                'maegz -- Maestro format',
                'mcdl -- MCDL format',
                'mcif -- Macromolecular Crystallographic Info',
                'MDFF -- MDFF format',
                'mdl -- MDL MOL format',
                'ml2 -- Sybyl Mol2 format',
                'mmcif -- Macromolecular Crystallographic Info',
                'mmd -- MacroModel format',
                'mmod -- MacroModel format',
                'mol -- MDL MOL format',
                'mol2 -- Sybyl Mol2 format',
                'mold -- Molden format',
                'molden -- Molden format',
                'molf -- Molden format',
                'moo -- MOPAC Output format',
                'mop -- MOPAC Cartesian format',
                'mopcrt -- MOPAC Cartesian format',
                'mopin -- MOPAC Internal',
                'mopout -- MOPAC Output format',
                'mpc -- MOPAC Cartesian format',
                'mpo -- Molpro output format',
                'mpqc -- MPQC output format',
                'mrv -- Chemical Markup Language',
                'msi -- Accelrys/MSI Cerius II MSI format',
                'nwo -- NWChem output format',
                'orca -- ORCA output format',
                'out -- Generic Output file format',
                'outmol -- DMol3 coordinates format',
                'output -- Generic Output file format',
                'pc -- PubChem format',
                'pcjson -- PubChem JSON',
                'pcm -- PCModel Format',
                'pdb -- Protein Data Bank format',
                'pdbqt -- AutoDock PDBQT format',
                'png -- PNG 2D depiction',
                'pos -- POS cartesian coordinates format',
                'POSCAR -- VASP format',
                'POSFF -- MDFF format',
                'pqr -- PQR format',
                'pqs -- Parallel Quantum Solutions format',
                'prep -- Amber Prep format',
                'pwscf -- PWscf format',
                'qcout -- Q-Chem output format',
                'res -- ShelX format',
                'rsmi -- Reaction SMILES format',
                'rxn -- MDL RXN format',
                'sd -- MDL MOL format',
                'sdf -- MDL MOL format',
                'siesta -- SIESTA format',
                'smi -- SMILES format',
                'smiles -- SMILES format',
                'smy -- SMILES format using Smiley parser',
                'sy2 -- Sybyl Mol2 format',
                't41 -- ADF TAPE41 format',
                'tdd -- Thermo format',
                'text -- Read and write raw text',
                'therm -- Thermo format',
                'tmol -- TurboMole Coordinate format',
                'txt -- Title format',
                'txyz -- Tinker XYZ format',
                'unixyz -- UniChem XYZ format',
                'VASP -- VASP format',
                'vmol -- ViewMol format',
                'wln -- Wiswesser Line Notation',
                'xml -- General XML format',
                'xsf -- XCrySDen Structure Format',
                'xyz -- XYZ cartesian coordinates format',
                'yob -- YASARA.org YOB format',
              ],
            },
            outputFormat: {
              type: 'string',
              enum: [
                'acesin -- ACES input format',
                'adf -- ADF cartesian input format',
                'alc -- Alchemy format',
                'ascii -- ASCII format',
                'bgf -- MSI BGF format',
                'box -- Dock 3.5 Box format',
                'bs -- Ball and Stick format',
                'c3d1 -- Chem3D Cartesian 1 format',
                'c3d2 -- Chem3D Cartesian 2 format',
                'cac -- CAChe MolStruct format',
                'caccrt -- Cacao Cartesian format',
                'cache -- CAChe MolStruct format',
                'cacint -- Cacao Internal format',
                'can -- Canonical SMILES format',
                'cdjson -- ChemDoodle JSON',
                'cdxml -- ChemDraw CDXML format',
                'cht -- Chemtool format',
                'cif -- Crystallographic Information File',
                'ck -- ChemKin format',
                'cml -- Chemical Markup Language',
                'cmlr -- CML Reaction format',
                'cof -- Culgi object file format',
                'com -- Gaussian Input',
                'confabreport -- Confab report format',
                'CONFIG -- DL-POLY CONFIG',
                'CONTCAR -- VASP format',
                'CONTFF -- MDFF format',
                'copy -- Copy raw text',
                'crk2d -- Chemical Resource Kit diagram(2D)',
                'crk3d -- Chemical Resource Kit 3D format',
                'csr -- Accelrys/MSI Quanta CSR format',
                'cssr -- CSD CSSR format',
                'ct -- ChemDraw Connection Table format',
                'cub -- Gaussian cube format',
                'cube -- Gaussian cube format',
                'dalmol -- DALTON input format',
                'dmol -- DMol3 coordinates format',
                'dx -- OpenDX cube format for APBS',
                'ent -- Protein Data Bank format',
                'exyz -- Extended XYZ cartesian coordinates format',
                'fa -- FASTA format',
                'fasta -- FASTA format',
                'feat -- Feature format',
                'fh -- Fenske-Hall Z-Matrix format',
                'fhiaims -- FHIaims XYZ format',
                'fix -- SMILES FIX format',
                'fps -- FPS text fingerprint format (Dalke)',
                'fpt -- Fingerprint format',
                'fract -- Free Form Fractional format',
                'fs -- Fastsearch format',
                'fsa -- FASTA format',
                'gamin -- GAMESS Input',
                'gau -- Gaussian Input',
                'gjc -- Gaussian Input',
                'gjf -- Gaussian Input',
                'gpr -- Ghemical format',
                'gr96 -- GROMOS96 format',
                'gro -- GRO format',
                'gukin -- GAMESS-UK Input',
                'gukout -- GAMESS-UK Output',
                'gzmat -- Gaussian Z-Matrix Input',
                'hin -- HyperChem HIN format',
                'inchi -- InChI format',
                'inchikey -- InChIKey',
                'inp -- GAMESS Input',
                'jin -- Jaguar input format',
                'k -- Compare molecules using InChI',
                'lmpdat -- The LAMMPS data format',
                'lpmd -- LPMD format',
                'mae -- Maestro format',
                'maegz -- Maestro format',
                'mcdl -- MCDL format',
                'mcif -- Macromolecular Crystallographic Info',
                'MDFF -- MDFF format',
                'mdl -- MDL MOL format',
                'ml2 -- Sybyl Mol2 format',
                'mmcif -- Macromolecular Crystallographic Info',
                'mmd -- MacroModel format',
                'mmod -- MacroModel format',
                'mna -- Multilevel Neighborhoods of Atoms (MNA)',
                'mol -- MDL MOL format',
                'mol2 -- Sybyl Mol2 format',
                'mold -- Molden format',
                'molden -- Molden format',
                'molf -- Molden format',
                'molreport -- Open Babel molecule report',
                'mop -- MOPAC Cartesian format',
                'mopcrt -- MOPAC Cartesian format',
                'mopin -- MOPAC Internal',
                'mp -- Molpro input format',
                'mpc -- MOPAC Cartesian format',
                'mpd -- MolPrint2D format',
                'mpqcin -- MPQC simplified input format',
                'mrv -- Chemical Markup Language',
                "msms -- M.F. Sanner's MSMS input format",
                'nul -- Outputs nothing',
                'nw -- NWChem input format',
                'orcainp -- ORCA input format',
                'outmol -- DMol3 coordinates format',
                'paint -- Painter format',
                'pcjson -- PubChem JSON',
                'pcm -- PCModel Format',
                'pdb -- Protein Data Bank format',
                'pdbqt -- AutoDock PDBQT format',
                'png -- PNG 2D depiction',
                'pointcloud -- Point cloud on VDW surface',
                'POSCAR -- VASP format',
                'POSFF -- MDFF format',
                'pov -- POV-Ray input format',
                'pqr -- PQR format',
                'pqs -- Parallel Quantum Solutions format',
                'qcin -- Q-Chem input format',
                'report -- Open Babel report format',
                'rinchi -- RInChI',
                'rsmi -- Reaction SMILES format',
                'rxn -- MDL RXN format',
                'sd -- MDL MOL format',
                'sdf -- MDL MOL format',
                'smi -- SMILES format',
                'smiles -- SMILES format',
                'stl -- STL 3D-printing format',
                'svg -- SVG 2D depiction',
                'sy2 -- Sybyl Mol2 format',
                'tdd -- Thermo format',
                'text -- Read and write raw text',
                'therm -- Thermo format',
                'tmol -- TurboMole Coordinate format',
                'txt -- Title format',
                'txyz -- Tinker XYZ format',
                'unixyz -- UniChem XYZ format',
                'VASP -- VASP format',
                'vmol -- ViewMol format',
                'xed -- XED format',
                'xyz -- XYZ cartesian coordinates format',
                'yob -- YASARA.org YOB format',
                'zin -- ZINDO input format',
              ],
            },
            hydrogens: {
              type: 'string',
              enum: ['Delete', 'Add'],
            },
            coordinates: {
              type: 'string',
              enum: ['', '2D', '3D'],
            },
            ph: {
              type: 'boolean',
            },
          },
        },
      },
    },
    convert,
  );
}

async function convert(request, response) {
  const body = request.body;
  let flags = [];
  if (body.hydrogens && body.hydrogens === 'Delete') flags.push('-d');
  if (body.hydrogens && body.hydrogens === 'Add') flags.push('-h');
  //  if (body.ph) flags.push(`-p ${body.ph}`);
  if (body.coordinates && body.coordinates === '2D') flags.push('--gen2D');
  if (body.coordinates && body.coordinates === '3D') flags.push('--gen3D');
  flags.push(`-i${body.inputFormat.replace(/ .*/, '')}`);
  flags.push(`-o ${body.outputFormat.replace(/ .*/, '')}`);

  const result = spawnSync(BABEL, flags, {
    stdio: ['pipe', 'pipe', 'pipe'],
    input: body.input,
    encoding: 'utf-8',
  });

  response.send({ result: result.stdout, log: result.stderr });
}
